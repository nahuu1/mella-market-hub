import React, { useState, useRef, useEffect } from 'react';
import { MessageCircle, X, Send, Bot, User, AlertTriangle, Loader2, Camera, Mic, MicOff, Image, Globe } from 'lucide-react';
import { useLanguage } from '@/contexts/LanguageContext';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { ScrollArea } from '@/components/ui/scroll-area';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Alert, AlertDescription } from '@/components/ui/alert';

interface Message {
  id: string;
  text: string;
  sender: 'user' | 'bot';
  timestamp: Date;
  type?: 'text' | 'image' | 'audio';
  imageUrl?: string;
  audioUrl?: string;
}

interface FirstAidChatbotProps {
  isOpen: boolean;
  onClose: () => void;
}

export const FirstAidChatbot: React.FC<FirstAidChatbotProps> = ({ isOpen, onClose }) => {
  const { t, language, setLanguage } = useLanguage();
  const [messages, setMessages] = useState<Message[]>([]);
  const [inputMessage, setInputMessage] = useState('');
  const [isLoading, setIsLoading] = useState(false);
  const [isRecording, setIsRecording] = useState(false);
  const [mediaRecorder, setMediaRecorder] = useState<MediaRecorder | null>(null);
  const messagesEndRef = useRef<HTMLDivElement>(null);
  const fileInputRef = useRef<HTMLInputElement>(null);

  // Initialize welcome message based on language
  useEffect(() => {
    const welcomeMessage = language === 'en' 
      ? `­Ъџе IMPORTANT DISCLAIMER: ${t('disclaimer')} In case of serious emergencies, please call 911 or your local emergency services IMMEDIATELY.\n\nFor minor issues, I can offer general first aid tips. ${t('howCanIHelp')}`
      : `­Ъџе ріарѕхрЇѕрѕІрїі рѕЏрѕхрЅ│рІѕрѕ╗: ${t('disclaimer')} рЅаріерЅБрІх рІеріарІ░рїІ рїірІюрЇБ ріЦрЅБріГрІј 911 рІѕрІГрѕЮ рІеріаріФрЅБрЅбрІјріЋ рІеріарІ░рїІ рїірІю ріарїѕрѕЇрїЇрѕјрЅХрЅйріЋ рІѕрІ▓рІФрІЇріЉ рІГрІ░рІЇрѕЅрЇб\n\nрѕѕріаріљрѕхрЅ░ріЏ рЅйрїЇрѕ«рЅйрЇБ рѕўрѕарѕерЅ│рІі рІерѕўрїђрѕўрѕфрІФ ріЦрѕГрІ│рЅ│ рѕЮріГрѕ«рЅй рѕ░рїЦрЅх рІГрЅйрѕІрѕЇрЇб ${t('howCanIHelp')}`;
    
    setMessages([{
      id: '1',
      text: welcomeMessage,
      sender: 'bot',
      timestamp: new Date(),
      type: 'text'
    }]);
  }, [language, t]);

  const scrollToBottom = () => {
    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });
  };

  useEffect(() => {
    scrollToBottom();
  }, [messages]);

  // Comprehensive first aid knowledge base for instant responses
  const getFirstAidResponse = (message: string): string | null => {
    const lowerMessage = message.toLowerCase();
    
    const responses: { [key: string]: { en: string; am: string } } = {
      'cut': {
        en: "­ЪЕИ For minor cuts:\n1. Clean your hands first\n2. Stop bleeding with direct pressure using clean cloth\n3. Clean wound gently with water\n4. Apply antibiotic ointment if available\n5. Cover with sterile bandage\n\nРџа№ИЈ Seek immediate medical attention for:\n- Deep cuts (you can see fat/muscle)\n- Cuts that won't stop bleeding\n- Signs of infection",
        am: "­ЪЕИ рѕѕріаріљрѕхрЅ░ріЏ рѕўрЅЂрѕерїФрІјрЅй:\n1. рѕўрїђрѕўрѕфрІФ ріЦрїєрЅйрІјріЋ рІГрѕ░рѕЕ\n2. ріЋрї╣рѕЁ рїерѕГрЅЁ рЅарѕўрїарЅђрѕЮ рЅђрїЦрЅ░ріЏ рїЇрЇірЅх рЅарѕЏрІхрѕерїЇ рІ░рѕЮ рѕўрЇЇрѕ░рѕхріЋ рІФрѕхрЅЂрѕЎ\n3. рЅЂрѕхрѕЅріЋ рЅарІЇрѕЃ рЅђрѕх рЅЦрѕѕрІЇ рІФрїйрІ▒\n4. рІерїИрѕе-рЅБріГрЅ┤рѕфрІФ рЅЁрЅБрЅх ріФрѕѕ рІГрЅ░рїЇрЅЦрѕЕ\n5. рЅаріЋрї╣рѕЁ рѕЏрѕ░рѕфрІФ рІГрѕИрЇЇріЉ\n\nРџа№ИЈ рЅХрѕј рІерѕЋріГрѕЮріЊ ріЦрѕГрІ│рЅ│ рІГрЇѕрѕЇрїЅ:\n- рїЦрѕЇрЅЁ рѕўрЅЂрѕерїФрІјрЅй\n- рІерѕЏрІГрЅєрѕЮ рІ░рѕЮ рѕўрЇЇрѕ░рѕх\n- рІерібріЋрЇїріГрѕйріЋ рѕЮрѕЇріГрЅХрЅй"
      },
      
      'burn': {
        en: "­ЪћЦ For minor burns:\n1. Cool immediately with cold running water (10-20 minutes)\n2. Remove jewelry/tight clothing before swelling\n3. Do NOT use ice, butter, or oils\n4. Apply aloe vera or burn gel\n5. Cover loosely with sterile gauze\n\n­Ъџе Call 911 for:\n- Burns larger than palm of hand\n- Burns on face, hands, feet, genitals\n- Chemical or electrical burns",
        am: "­ЪћЦ рѕѕріаріљрѕхрЅ░ріЏ рЅЃрїарѕјрІјрЅй:\n1. рІѕрІ▓рІФрІЇріЉ рЅарЅђрІЮрЅЃрІЏ рІЇрѕЃ рІФрЅђрІЮрЅЁрІЎ (10-20 рІ░рЅѓрЅЃ)\n2. ріерѕЏрЅарїЦ рЅарЇірЅх рїїрїдрЅй/рїарЅБрЅЦ рѕЇрЅЦрѕХрЅй рІФрѕхрІѕрїЇрІ▒\n3. рЅарѕерІХрЇБ рЅЁрЅц рІѕрІГрѕЮ рІўрІГрЅх ріарІГрїарЅђрѕЎ\n4. ріарѕјрЅгрѕФ рІѕрІГрѕЮ рІерЅЃрїарѕј рїёрѕЇ рІГрЅ░рїЇрЅЦрѕЕ\n5. рЅаріЋрї╣рѕЁ рїІрІЮ рЅђрѕІрѕЇ рІГрѕИрЇЇріЉ\n\n­Ъџе 911 рІГрІ░рІЇрѕЅ:\n- ріеріЦрїЁ рѕўрІ│рЇЇ рІерѕџрЅарѕЇрїЦ рЅЃрїарѕј\n- рЅарЇірЅхрЇБ ріЦрїЁрЇБ ріЦрїЇрѕГрЇБ рІѕрѕ▓рЅЦ ріаріФрѕјрЅй рѕІрІГ\n- рІерігрѕџріФрѕЇ рІѕрІГрѕЮ рІеріцрѕїріГрЅхрѕфріГ рЅЃрїарѕј"
      },
      
      'choking': {
        en: "­ЪФЂ For choking adult:\n1. If they can cough/speak - encourage coughing\n2. If they CANNOT breathe:\n   - Stand behind them\n   - 5 sharp back blows between shoulder blades\n   - 5 abdominal thrusts (Heimlich maneuver)\n   - Repeat until object comes out\n\n­ЪЊъ Call 911 immediately if unsuccessful\nРџа№ИЈ Different technique needed for babies/infants",
        am: "­ЪФЂ рѕѕрЅ░рѕўріљрЇѕрѕ░ рїјрѕЇрѕЏрѕ│:\n1. рѕЏрѕ│рѕЇріЊ/рѕўріЊрїѕрѕГ ріФрѕѕрЅ╗рѕѕ - рѕЏрѕ│рѕЇ ріЦріЋрІ▓рЅђрїЦрѕЇ рѕЏрЅарѕерЅ│рЅ│рЅх\n2. рѕўрЅ░ріЋрЇѕрѕх ріФрѕЇрЅ╗рѕѕ:\n   - ріеріІрѕІрЅИрІЇ рІГрЅЂрѕЎ\n   - рЅарЅхріерѕ╗ рѕЮрѕІрѕЙрЅй рѕўріФріерѕЇ 5 рЇѕрїБріЋ рІерїђрѕГрЅБ рѕЮрЅх\n   - 5 рІерѕєрІх рїЇрЇірЅХрЅй (рѕЃрІГрѕЮрѕіріГ рІўрІ┤)\n   - ріЦрЅЃрІЇ ріЦрѕхріерІѕрїБ рІхрѕерѕх рІГрІ░рїЇрѕЎ\n\n­ЪЊъ ріФрѕЇрЅ░рѕ│ріФ рІѕрІ▓рІФрІЇріЉ 911 рІГрІ░рІЇрѕЅ\nРџа№ИЈ рѕѕрѕЋрЇЃріЊрЅх/рѕѕрїерЅЁрѕІ рѕЋрЇЃріЊрЅх рІерЅ░рѕѕрІе рІўрІ┤ рІФрѕхрЇѕрѕЇрїІрѕЇ"
      },
      
      'bleeding': {
        en: "­ЪЕИ For serious bleeding:\n1. Apply direct pressure with clean cloth/bandage\n2. Do NOT remove if cloth soaks through - add more layers\n3. Elevate injured area above heart if possible\n4. Apply pressure to pressure points if needed\n5. Do NOT remove embedded objects\n\n­Ъџе Call 911 for:\n- Spurting blood (arterial)\n- Bleeding that won't stop\n- Signs of shock (pale, weak, dizzy)",
        am: "­ЪЕИ рѕѕріерЅБрІх рІ░рѕЮ рѕўрЇЇрѕ░рѕх:\n1. рЅаріЋрї╣рѕЁ рїерѕГрЅЁ/рѕЏрѕ░рѕфрІФ рЅђрїЦрЅ░ріЏ рїЇрЇірЅх рІГрЅ░рїЇрЅЦрѕЕ\n2. рїерѕГрЅЂ ріерЅ░рѕърѕІ ріарІФрѕхрІѕрїЇрІ▒рЅх - рЅ░рїерѕЏрѕф рѕйрЇІріќрЅй рІГрїерѕЮрѕЕ\n3. рІерЅ░рїјрІ│рІЇріЋ ріГрЇЇрѕЇ ріерѕЇрЅЦ рЅарѕІрІГ ріФрѕйрѕй рІФрѕ│рІхрѕЕ\n4. рЅарїЇрЇірЅх ріљрїЦрЅдрЅй рѕІрІГ рїЇрЇірЅх рІГрЅ░рїЇрЅЦрѕЕ\n5. рІерїѕрЅА ріљрїѕрѕ«рЅйріЋ ріарІФрѕхрІѕрїЇрІ▒\n\n­Ъџе 911 рІГрІ░рІЇрѕЅ:\n- рІерѕџрІўріЋрЅЦ рІ░рѕЮ (рІерІ░рѕЮ рѕЦрѕГ)\n- рІерѕЏрІГрЅєрѕЮ рІ░рѕЮ рѕўрЇЇрѕ░рѕх\n- рІерІхріЋрїІрїц рѕЮрѕЇріГрЅХрЅй (рѕИріФрѕФрѕЏрЇБ рІ░ріФрѕЏрЇБ рѕЏрІърѕГ)"
      },
      
      'sprain': {
        en: "­Ъдх For sprains (R.I.C.E. method):\n1. REST - Stop activity, don't walk on it\n2. ICE - 15-20 minutes every 2-3 hours (first 48 hours)\n3. COMPRESSION - Wrap with elastic bandage (not too tight)\n4. ELEVATION - Raise above heart level when possible\n\n­ЪЈЦ See doctor if:\n- Severe pain or can't bear weight\n- Numbness or tingling\n- No improvement after 2-3 days",
        am: "­Ъдх рѕѕрѕўрІѕрІўрІЮ (R.I.C.E. рІўрІ┤):\n1. ріЦрѕерЇЇрЅх - ріЦріЋрЅЁрѕхрЅЃрѕ┤ рІФрЅЂрѕЎрЇБ ріаріЋрѕГрѕ▒рЅЦрЅх\n2. рЅарѕерІХ - рЅарІе2-3 рѕ░рІЊрЅх 15-20 рІ░рЅѓрЅЃ (рІерѕўрїђрѕўрѕфрІФрІјрЅ╣ 48 рѕ░рІЊрЅХрЅй)\n3. рїФріЊ - рЅарѕІрѕхрЅ▓ріГ рѕЏрѕ░рѕфрІФ рІГрїарЅЂ (рЅарїБрѕЮ ріарІГрїЦ)\n4. ріерЇЇ рѕЏрІхрѕерїЇ - рЅарЅ░рЅ╗рѕѕ рѕўрїаріЋ ріерѕЇрЅЦ рІ░рѕерїЃ рЅарѕІрІГ рІФрѕ│рІхрѕЕ\n\n­ЪЈЦ рІХріГрЅ░рѕГ рІГрѕўрѕЇріерЅ▒:\n- ріерЅБрІх рѕЁрѕўрѕЮ рІѕрІГрѕЮ ріГрЅЦрІ░рЅх рѕўрѕИріерѕЮ ріФрѕЇрЅ╗рѕЅ\n- рѕўрІ░ріЋрІўрІЮ рІѕрІГрѕЮ рѕўрЅ░ріљрЅ░ріЋ\n- ріе2-3 рЅђріЊрЅх рЅаріІрѕІ рѕўрѕ╗рѕ╗рѕЇ ріФрѕЇрЅ│рІе"
      },
      
      'fever': {
        en: "­ЪїА№ИЈ For fever:\n1. Rest and drink plenty of fluids\n2. Take fever-reducing medication (follow dosage)\n3. Use cool, damp cloths on forehead\n4. Wear light, breathable clothing\n5. Monitor temperature regularly\n\n­Ъџе Seek immediate care for:\n- Fever over 103┬░F (39.4┬░C)\n- Fever with stiff neck, severe headache\n- Difficulty breathing",
        am: "­ЪїА№ИЈ рѕѕрЅхріЕрѕ│рЅх:\n1. рІГрІЮріЊріЉ ріЦріЊ рЅЦрІЎ рЇѕрѕ│рѕй рІГрїарїА\n2. рІерЅхріЕрѕ│рЅх рЅђріЋрѕ╗ рѕўрІхрѕљріњрЅх рІГрІЇрѕ░рІ▒ (рѕўрїаріЉріЋ рІГріерЅ░рѕЅ)\n3. рЅарїЇріЋрЅБрѕГ рѕІрІГ рЅђрІЮрЅЃрІЏрЇБ ріЦрѕГрїЦрЅЦ рїерѕГрЅЁ рІГрїарЅђрѕЎ\n4. рЅђрѕІрѕЇрЇБ ріарІерѕГ рІерѕџрІФрѕхрЅ░рѕІрѕЇрЇЇ рѕЇрЅЦрѕх рІГрѕЇрЅарѕ▒\n5. рѕЎрЅђрЅхрІјріЋ рЅарѕўрІ░рЅаріЏріљрЅх рІГрЅєрїБрїарѕЕ\n\n­Ъџе рІѕрІ▓рІФрІЇріЉ ріЦріЋріГрЅЦріФрЅц рІГрЇѕрѕЇрїЅ:\n- ріе103┬░F (39.4┬░C) рЅарѕІрІГ рЅхріЕрѕ│рЅх\n- ріеріаріЋрїѕрЅх рїЦрѕфрЇБ ріерЅБрІх рѕФрѕх рѕЮрЅ│рЅх рїІрѕГ рЅхріЕрѕ│рЅх\n- рІерѕўрЅ░ріЋрЇѕрѕх рЅйрїЇрѕГ"
      },
      
      'allergic': {
        en: "Рџа№ИЈ For allergic reactions:\nMILD (skin rash, itching):\n1. Remove/avoid trigger if known\n2. Take antihistamine (Benadryl)\n3. Apply cool compress to affected area\n\n­Ъџе SEVERE (trouble breathing, swelling of face/throat):\n1. Call 911 IMMEDIATELY\n2. Use EpiPen if available\n3. Help person sit upright\n4. Be ready to perform CPR",
        am: "Рџа№ИЈ рѕѕріарѕѕрѕГрїѓ рѕЮрѕІрѕЙрЅй:\nрѕўрѕѕрѕхрЅ░ріЏ (рІерЅєрІ│ рѕйрЇЇрЅ│рЇБ рѕўрЅђрѕ│рЅђрѕх):\n1. рІГрЅ│рІѕрЅЁ ріерѕєріљ рѕўріЋрѕхріцрІЇріЋ рІФрѕхрІѕрїЇрІ▒/рІФрѕхрЅЂрѕЎ\n2. ріаріЋрЅ▓рѕѓрѕхрЅ│рѕџріЋ (рЅцріЊрІхрѕфрѕЇ) рІГрІЇрѕ░рІ▒\n3. рЅарЅ░рїјрІ│рІЇ рЅдрЅ│ рѕІрІГ рЅђрІЮрЅЃрІЏ рїФріЊ рІГрЅ░рїЇрЅЦрѕЕ\n\n­Ъџе ріерЅБрІх (рІерѕўрЅ░ріЋрЇѕрѕх рЅйрїЇрѕГрЇБ рІерЇірЅх/рІерїЅрѕ«рѕ« рѕЏрЅарїЦ):\n1. рІѕрІ▓рІФрІЇріЉ 911 рІГрІ░рІЇрѕЅ\n2. рібрЇњрЇћріЋ ріФрѕѕ рІГрїарЅђрѕЎ\n3. рѕ░рІЇрІерІЇ рЅаріЕрѕЇріЕрѕЇ ріЦріЋрІ▓рЅђрѕўрїЦ рІФрїЇрІЎ\n4. рѕ▓рЇњріарѕГ рѕѕрѕўрѕхрїарЅх рІЮрїЇрїЂ рІГрѕЂріЉ"
      },
      
      'seizure': {
        en: "­ЪДа For seizures:\n1. Keep person safe - move sharp objects away\n2. Time the seizure\n3. Turn person on side if possible\n4. Do NOT put anything in their mouth\n5. Stay with them until they're fully conscious\n\n­ЪЊъ Call 911 if:\n- Seizure lasts over 5 minutes\n- Person has trouble breathing after\n- Another seizure happens soon after",
        am: "­ЪДа рѕѕріЋрІЋрѕх рЅарѕйрЅ│:\n1. рѕ░рІЇрІерІЇріЋ рІ░рѕЁріЋріљрЅх рІФрѕЂріЉ - рѕхрѕѕрЅ│рѕЮ ріљрїѕрѕ«рЅйріЋ рІФрѕхрІѕрїЇрІ▒\n2. рІеріЋрІЋрѕх рЅарѕйрЅ│рІЇріЋ рїірІю рІГрЅєрїЦрѕЕ\n3. рѕ░рІЇрІерІЇріЋ рЅарїјріЋ рІФрѕйріГрѕГріГрѕЕ ріерЅ╗рѕЅ\n4. рЅаріарЇІрЅИрІЇ рІЇрѕхрїЦ рѕЮріЋрѕЮ ріљрїѕрѕГ ріарІФрІхрѕГрїЅ\n5. рѕЎрѕЅ рЅарѕЎрѕЅ ріЦрѕхріфрїарїЇ рІхрѕерѕх ріеріЦріљрѕ▒ рїІрѕГ рІГрЅєрІЕ\n\n­ЪЊъ 911 рІГрІ░рІЇрѕЅ:\n- ріЋрІЋрѕх рЅарѕйрЅ│рІЇ ріе5 рІ░рЅѓрЅЃ рЅарѕІрІГ ріерІўрѕѕрЅђ\n- рѕ░рІЇрІерІЇ ріерІџрѕЁ рЅаріІрѕІ рІерѕўрЅ░ріЋрЇѕрѕх рЅйрїЇрѕГ ріеріљрЅарѕерІЇ\n- рѕїрѕІ ріЋрІЋрѕх рЅарѕйрЅ│ рЅЦрІЎрѕЮ рѕ│рІГрЅєрІГ ріерЅ░ріерѕ░рЅ░"
      },
    };

    // Check for keywords in the message
    for (const [keyword, response] of Object.entries(responses)) {
      if (lowerMessage.includes(keyword)) {
        const reminder = language === 'en' 
          ? "\n\nРџа№ИЈ REMINDER: I'm not a doctor. This is basic first aid guidance only."
          : "\n\nРџа№ИЈ рѕЏрѕхрЅ│рІѕрѕ╗: ріЦріћ рІХріГрЅ░рѕГ ріарІГрІ░рѕѕрѕЂрѕЮрЇб рІГрѕЁ рѕўрѕарѕерЅ│рІі рІерѕўрїђрѕўрѕфрІФ ріЦрѕГрІ│рЅ│ рѕўрѕўрѕфрІФ рЅЦрЅ╗ ріљрІЇрЇб";
        return response[language] + reminder;
      }
    }

    // Check for emergency keywords that require immediate 911 call
    const emergencyKeywords = ['unconscious', 'not breathing', 'chest pain', 'heart attack', 'stroke', 'overdose', 'poisoning', 'severe bleeding'];
    for (const keyword of emergencyKeywords) {
      if (lowerMessage.includes(keyword)) {
        const emergencyResponse = language === 'en'
          ? `­Ъџе EMERGENCY SITUATION DETECTED ­Ъџе\n\nCall 911 IMMEDIATELY for: ${keyword.toUpperCase()}\n\nWhile waiting for help:\n- Stay with the person\n- Follow dispatcher instructions\n- Be ready to provide CPR if trained\n- Keep person calm and comfortable\n\nРџа№ИЈ Do not delay - professional medical help is urgently needed!`
          : `­Ъџе рІеріарІ░рїІ рїірІю рѕЂріћрЅ│ рЅ░рїѕріЮрЅирѕЇ ­Ъџе\n\nрІѕрІ▓рІФрІЇріЉ 911 рІГрІ░рІЇрѕЅ: ${keyword.toUpperCase()}\n\nріЦрѕГрІ│рЅ│ ріЦрѕхріГрЅхрѕўрїБ рІхрѕерѕх:\n- ріерѕ░рІЇрІерІЇ рїІрѕГ рІГрЅєрІЕ\n- рІерѕІріф рѕўрѕўрѕфрІФрІјрЅйріЋ рІГріерЅ░рѕЅ\n- рѕ▓рЇњріарѕГ рѕѕрѕўрѕхрїарЅх рІЮрїЇрїЂ рІГрѕЂріЉ\n- рѕ░рІЇрІерІЇріЋ рѕерїІ рІФрІхрѕГрїЅрЅх\n\nРџа№ИЈ ріарІГрІўрїѕрІЕ - рІерЅБрѕѕрѕЎрІФ рІерѕЋріГрѕЮріЊ ріЦрѕГрІ│рЅ│ ріарѕхрЇѕрѕІрїі ріљрІЇ!`;
        return emergencyResponse;
      }
    }

    return null;
  };

  const generateResponse = async (userMessage: string): Promise<string> => {
    // First check our knowledge base for instant responses
    const knowledgeResponse = getFirstAidResponse(userMessage);
    if (knowledgeResponse) {
      return knowledgeResponse;
    }

    // For other queries, provide general guidance
    const generalResponses = {
      en: [
        "I can help with basic first aid for cuts, burns, sprains, choking, bleeding, fever, and allergic reactions. Could you be more specific about what you need help with?",
        "For the best first aid guidance, please tell me specifically what happened - for example: 'cut on finger', 'burn from stove', 'sprained ankle', etc.",
        "I have information about common first aid situations. Try asking about: cuts, burns, choking, bleeding, sprains, fever, or allergic reactions.",
      ],
      am: [
        "рѕѕрѕўрЅЂрѕерїФрІјрЅйрЇБ рЅЃрїарѕјрІјрЅйрЇБ рѕўрІѕрІўрІЮрЇБ рѕўрЅ│рЇѕріЋрЇБ рІ░рѕЮ рѕўрЇЇрѕ░рѕхрЇБ рЅхріЕрѕ│рЅх ріЦріЊ рІеріарѕѕрѕГрїѓ рѕЮрѕГрѕўрѕФрІјрЅй рѕўрѕарѕерЅ│рІі рІерѕўрїђрѕўрѕфрІФ ріЦрѕГрІ│рЅ│ рѕ░рїарЅх рІГрЅйрѕІрѕЇрЇб рѕхрѕѕрѕџрЇѕрѕЇрїЅрЅх ріљрїѕрѕГ рІерЅарѕѕрїа рѕЇрІЕ рѕірѕєріЉ рІГрЅйрѕІрѕЅ?",
        "рѕѕрЅ░рѕ╗рѕѕ рІерѕўрїђрѕўрѕфрІФ ріЦрѕГрІ│рЅ│ рѕўрѕўрѕфрІФрЇБ ріЦрЅБріГрІј рІерЅ░ріерѕ░рЅ░рІЇріЋ ріљрїѕрѕГ рЅарЅ░рѕѕрІГ рІГріЋрїѕрѕЕріЮ - рѕѕрѕЮрѕ│рѕї: 'рЅарїБрЅх рѕІрІГ рѕўрЅЂрѕерїЦ'рЇБ 'ріерѕЮрІхрїЃ рЅЃрїарѕј'рЇБ 'рІерЅ░рІѕрІўрІў рЅЂрѕГрїГрѕЮрїГрѕџрЅх' рІѕрІўрЅ░рЇб",
        "рѕхрѕѕ ріарїарЅЃрѕІрІГ рІерѕўрїђрѕўрѕфрІФ ріЦрѕГрІ│рЅ│ рѕЂріћрЅ│рІјрЅй рѕўрѕерїЃ ріарѕѕріЮрЇб ріЦріљрІџрѕЁріЋ рІГрѕъріГрѕЕ: рѕўрЅЂрѕерїФрІјрЅйрЇБ рЅЃрїарѕјрІјрЅйрЇБ рѕўрЅ│рЇѕріЋрЇБ рІ░рѕЮ рѕўрЇЇрѕ░рѕхрЇБ рѕўрІѕрІўрІЮрЇБ рЅхріЕрѕ│рЅх рІѕрІГрѕЮ рІеріарѕѕрѕГрїѓ рѕЮрѕГрѕўрѕФрІјрЅйрЇб",
      ]
    };
    
    const randomResponse = generalResponses[language][Math.floor(Math.random() * generalResponses[language].length)];
    const reminder = language === 'en' 
      ? "\n\nРџа№ИЈ Remember: For serious emergencies, always call 911 first!"
      : "\n\nРџа№ИЈ рІФрѕхрЅ│рІЇрѕ▒: рѕѕріерЅБрІх ріарІ░рїІрІјрЅйрЇБ рѕЂрѕЇрїірІю 911 рѕўрїђрѕўрѕфрІФ рІГрІ░рІЇрѕЅ!";
    return randomResponse + reminder;
  };
  // Handle voice recording
  const startRecording = async () => {
    try {
      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });
      const recorder = new MediaRecorder(stream);
      const chunks: BlobPart[] = [];

      recorder.ondataavailable = (e) => chunks.push(e.data);
      recorder.onstop = () => {
        const blob = new Blob(chunks, { type: 'audio/webm' });
        const audioUrl = URL.createObjectURL(blob);
        
        const audioMessage: Message = {
          id: Date.now().toString(),
          text: language === 'en' ? 'Voice message' : 'рІерІхрѕЮрїй рѕўрѕЇріЦріГрЅх',
          sender: 'user',
          timestamp: new Date(),
          type: 'audio',
          audioUrl
        };
        
        setMessages(prev => [...prev, audioMessage]);
        
        // Simulate processing voice message
        setTimeout(() => {
          const response = language === 'en' 
            ? "I received your voice message. Please describe your situation in text for better assistance."
            : "рІерІхрѕЮрїй рѕўрѕЇріЦріГрЅхрІјріЋ рЅ░рЅђрЅЦрІФрѕѕрѕЂрЇб рѕѕрЅ░рѕ╗рѕѕ ріЦрѕГрІ│рЅ│ рѕЂріћрЅ│рІјріЋ рЅарїйрѕЂрЇЇ рІГрїЇрѕѕрї╣рЇб";
          
          const botMessage: Message = {
            id: (Date.now() + 1).toString(),
            text: response,
            sender: 'bot',
            timestamp: new Date(),
            type: 'text'
          };
          setMessages(prev => [...prev, botMessage]);
        }, 1000);
      };

      recorder.start();
      setMediaRecorder(recorder);
      setIsRecording(true);
    } catch (error) {
      console.error('Error accessing microphone:', error);
    }
  };

  const stopRecording = () => {
    if (mediaRecorder) {
      mediaRecorder.stop();
      mediaRecorder.stream.getTracks().forEach(track => track.stop());
      setIsRecording(false);
      setMediaRecorder(null);
    }
  };

  // Handle image upload
  const handleImageUpload = (event: React.ChangeEvent<HTMLInputElement>) => {
    const file = event.target.files?.[0];
    if (file && file.type.startsWith('image/')) {
      const reader = new FileReader();
      reader.onload = (e) => {
        const imageUrl = e.target?.result as string;
        
        const imageMessage: Message = {
          id: Date.now().toString(),
          text: language === 'en' ? 'Image uploaded' : 'рѕЮрѕхрѕЇ рЅ░рѕ░рЅЁрѕЈрѕЇ',
          sender: 'user',
          timestamp: new Date(),
          type: 'image',
          imageUrl
        };
        
        setMessages(prev => [...prev, imageMessage]);
        
        // Simulate image analysis
        setTimeout(() => {
          const response = language === 'en' 
            ? "I can see your image. Please describe what happened so I can provide appropriate first aid guidance."
            : "рѕЮрѕхрѕЇрІјріЋ рѕЏрІерЅх ріЦрЅйрѕІрѕѕрѕЂрЇб рЅ░рїѕрЅбрІЇріЋ рІерѕўрїђрѕўрѕфрІФ ріЦрѕГрІ│рЅ│ рѕўрѕўрѕфрІФ рѕѕрѕўрѕхрїарЅх рѕЮріЋ ріЦріЋрІ░рЅ░ріерѕ░рЅ░ рІГрїЇрѕѕрї╣рЇб";
          
          const botMessage: Message = {
            id: (Date.now() + 1).toString(),
            text: response,
            sender: 'bot',
            timestamp: new Date(),
            type: 'text'
          };
          setMessages(prev => [...prev, botMessage]);
        }, 1500);
      };
      reader.readAsDataURL(file);
    }
  };

  const handleSendMessage = async () => {
    if (!inputMessage.trim()) return;

    const userMessage: Message = {
      id: Date.now().toString(),
      text: inputMessage,
      sender: 'user',
      timestamp: new Date(),
      type: 'text'
    };

    setMessages(prev => [...prev, userMessage]);
    const currentInput = inputMessage;
    setInputMessage('');
    setIsLoading(true);

    try {
      const botResponse = await generateResponse(currentInput);
      
      const botMessage: Message = {
        id: (Date.now() + 1).toString(),
        text: botResponse,
        sender: 'bot',
        timestamp: new Date()
      };

      setMessages(prev => [...prev, botMessage]);
    } catch (error) {
      console.error('Error generating response:', error);
      const errorText = language === 'en' 
        ? "­Ъџе I'm having trouble right now. For any medical emergency, please call 911 immediately or contact your local emergency services."
        : "­Ъџе ріарѕЂріЋ рЅйрїЇрѕГ ріЦрІФрїІрїарѕўріЮ ріљрІЇрЇб рѕѕрѕЏріЋріЏрІЇрѕЮ рІерѕЋріГрѕЮріЊ ріарІ░рїІрЇБ ріЦрЅБріГрІј 911 рІѕрІГрѕЮ рІеріаріФрЅБрЅбрІјріЋ рІеріарІ░рїІ рїірІю ріарїѕрѕЇрїЇрѕјрЅХрЅйріЋ рІѕрІ▓рІФрІЇріЉ рІГрІ░рІЇрѕЅрЇб";
      
      const errorMessage: Message = {
        id: (Date.now() + 1).toString(),
        text: errorText,
        sender: 'bot',
        timestamp: new Date(),
        type: 'text'
      };
      setMessages(prev => [...prev, errorMessage]);
    } finally {
      setIsLoading(false);
    }
  };

  const handleKeyPress = (e: React.KeyboardEvent) => {
    if (e.key === 'Enter' && !e.shiftKey) {
      e.preventDefault();
      handleSendMessage();
    }
  };

  if (!isOpen) return null;

  return (
    <div className="fixed inset-0 bg-black/50 backdrop-blur-sm z-[200] flex items-center justify-center p-4" onClick={(e) => e.target === e.currentTarget && onClose()}>
      <Card className="w-full max-w-md max-h-[85vh] flex flex-col bg-white shadow-2xl" onClick={(e) => e.stopPropagation()}>
        <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-3 border-b bg-red-50">
          <div className="flex items-center gap-2">
            <CardTitle className="flex items-center gap-2 text-lg text-red-700">
              <Bot className="h-5 w-5" />
              ­Ъџе {t('firstAidTitle')}
            </CardTitle>
            <Button
              variant="ghost"
              size="sm"
              onClick={() => setLanguage(language === 'en' ? 'am' : 'en')}
              className="text-red-600 hover:text-red-800"
              title={language === 'en' ? 'Switch to Amharic' : 'Switch to English'}
            >
              <Globe className="h-4 w-4" />
            </Button>
          </div>
          <Button variant="ghost" size="sm" onClick={onClose} className="text-red-600 hover:text-red-800">
            <X className="h-4 w-4" />
          </Button>
        </CardHeader>

        <Alert className="m-4 mb-2 border-red-200 bg-red-50">
          <AlertTriangle className="h-4 w-4 text-red-600" />
          <AlertDescription className="text-sm font-medium text-red-800">
            {language === 'en' 
              ? 'Рџа№ИЈ NOT MEDICAL ADVICE - For emergencies, call 911 immediately!'
              : 'Рџа№ИЈ рІерѕЋріГрѕЮріЊ рѕЮріГрѕГ ріарІГрІ░рѕѕрѕЮ - рѕѕріарІ░рїІ рїірІюрЇБ рІѕрІ▓рІФрІЇріЉ 911 рІГрІ░рІЇрѕЅ!'
            }
          </AlertDescription>
        </Alert>

        <CardContent className="flex-1 p-0 flex flex-col">
          <ScrollArea className="flex-1 p-4">
            <div className="space-y-4">
              {messages.map((message) => (
                <div
                  key={message.id}
                  className={`flex gap-3 ${
                    message.sender === 'user' ? 'justify-end' : 'justify-start'
                  }`}
                >
                  {message.sender === 'bot' && (
                    <div className="w-8 h-8 rounded-full bg-red-100 flex items-center justify-center flex-shrink-0">
                      <Bot className="h-4 w-4 text-red-600" />
                    </div>
                  )}
                  <div
                    className={`max-w-[85%] rounded-lg p-3 text-sm ${
                      message.sender === 'user'
                        ? 'bg-blue-600 text-white'
                        : 'bg-gray-100 text-gray-900 border border-gray-200'
                    }`}
                  >
                    {message.type === 'image' && message.imageUrl && (
                      <div className="mb-2">
                        <img 
                          src={message.imageUrl} 
                          alt="Uploaded" 
                          className="max-w-full h-32 object-cover rounded border"
                        />
                      </div>
                    )}
                    {message.type === 'audio' && message.audioUrl && (
                      <div className="mb-2">
                        <audio controls className="w-full max-w-48">
                          <source src={message.audioUrl} type="audio/webm" />
                        </audio>
                      </div>
                    )}
                    <div className="whitespace-pre-wrap">{message.text}</div>
                    <div
                      className={`text-xs mt-1 ${
                        message.sender === 'user' ? 'text-blue-100' : 'text-gray-500'
                      }`}
                    >
                      {message.timestamp.toLocaleTimeString()}
                    </div>
                  </div>
                  {message.sender === 'user' && (
                    <div className="w-8 h-8 rounded-full bg-blue-600 flex items-center justify-center flex-shrink-0">
                      <User className="h-4 w-4 text-white" />
                    </div>
                  )}
                </div>
              ))}
              {isLoading && (
                <div className="flex gap-3">
                  <div className="w-8 h-8 rounded-full bg-red-100 flex items-center justify-center flex-shrink-0">
                    <Loader2 className="h-4 w-4 text-red-600 animate-spin" />
                  </div>
                  <div className="bg-gray-100 rounded-lg p-3 text-sm">
                    <div className="text-gray-600">Thinking...</div>
                  </div>
                </div>
              )}
              <div ref={messagesEndRef} />
            </div>
          </ScrollArea>

          <div className="border-t p-4 bg-gray-50">
            <div className="text-xs text-gray-600 mb-2 text-center">
              {language === 'en' 
                ? '­ЪњА Try: "cut on finger", "burn from stove", "sprained ankle"'
                : '­ЪњА рІГрѕъріГрѕЕ: "рЅарїБрЅх рѕІрІГ рѕўрЅЂрѕерїЦ"рЇБ "ріерѕЮрІхрїЃ рЅЃрїарѕј"рЇБ "рІерЅ░рІѕрІўрІў рЅЂрѕГрїГрѕЮрїГрѕџрЅх"'
              }
            </div>
            
            <div className="flex gap-2 mb-2">
              <input
                type="file"
                accept="image/*"
                onChange={handleImageUpload}
                ref={fileInputRef}
                className="hidden"
              />
              <Button
                variant="outline"
                size="sm"
                onClick={() => fileInputRef.current?.click()}
                disabled={isLoading}
                className="text-red-600 border-red-200 hover:bg-red-50"
              >
                <Image className="h-4 w-4" />
              </Button>
              
              <Button
                variant="outline"
                size="sm"
                onClick={isRecording ? stopRecording : startRecording}
                disabled={isLoading}
                className={`text-red-600 border-red-200 hover:bg-red-50 ${isRecording ? 'bg-red-100' : ''}`}
              >
                {isRecording ? <MicOff className="h-4 w-4" /> : <Mic className="h-4 w-4" />}
              </Button>
            </div>
            
            <div className="flex gap-2">
              <Input
                value={inputMessage}
                onChange={(e) => setInputMessage(e.target.value)}
                onKeyPress={handleKeyPress}
                placeholder={language === 'en' 
                  ? "Describe your first aid situation..." 
                  : "рІерѕўрїђрѕўрѕфрІФ ріЦрѕГрІ│рЅ│ рѕЂріћрЅ│рІјріЋ рІГрїЇрѕѕрї╣..."
                }
                className="flex-1"
                disabled={isLoading}
              />
              <Button
                onClick={handleSendMessage}
                disabled={isLoading || !inputMessage.trim()}
                size="sm"
                className="bg-red-600 hover:bg-red-700 text-white"
              >
                <Send className="h-4 w-4" />
              </Button>
            </div>
          </div>
        </CardContent>
      </Card>
    </div>
  );
};